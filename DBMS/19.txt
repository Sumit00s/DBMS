Create Database DYPIT using MongoDB
Create following Collections
Teachers(Tname,dno,dname,experience,salary,date_of_joining )
Students(Sname,roll_no,class)

1. Find the information about all teachers
2. Find the information about all teachers of computer department
3. Find the information about all teachers of computer,IT,and e&TC department
4. Find the information about all teachers of computer,IT,and E&TC department having
salary greate than or equl to 10000/-
5. Find the student information having roll_no = 2 or Sname=xyz
6. Update the experience of teacher-praveen to 10years, if the entry is not available in
database consider the entry as new entry.
7. Update the deparment of all the teachers working in IT deprtment to COMP
8. find the teachers name and their experience from teachers collection
9. Using Save() method insert one entry in department collection
10. Using Save() method change the dept of teacher Rajesh to IT
11. Delete all the doccuments from teachers collection having IT dept.
12. display with pretty() method, the first 3 doccuments in teachers collection in ascending
order

Step 1: Create Database and Collections
javascript
Copy code
use DYPIT; // Switch to or create the DYPIT database

// Create Teachers collection and insert some sample data
db.Teachers.insertMany([
    { Tname: "Praveen", dno: 101, dname: "COMP", experience: 5, salary: 12000, date_of_joining: new Date("2018-07-01") },
    { Tname: "Rajesh", dno: 102, dname: "IT", experience: 7, salary: 11000, date_of_joining: new Date("2017-03-10") },
    { Tname: "Anita", dno: 103, dname: "E&TC", experience: 6, salary: 9000, date_of_joining: new Date("2019-09-20") }
]);

// Create Students collection and insert some sample data
db.Students.insertMany([
    { Sname: "John", roll_no: 1, class: "10th" },
    { Sname: "xyz", roll_no: 2, class: "12th" }
]);
Queries
Find the information about all teachers

javascript
Copy code
db.Teachers.find();
Find the information about all teachers of the computer department

javascript
Copy code
db.Teachers.find({ dname: "COMP" });
Find the information about all teachers of computer, IT, and E&TC departments

javascript
Copy code
db.Teachers.find({ dname: { $in: ["COMP", "IT", "E&TC"] } });
Find the information about all teachers of computer, IT, and E&TC departments with salary >= 10000

javascript
Copy code
db.Teachers.find({
    dname: { $in: ["COMP", "IT", "E&TC"] },
    salary: { $gte: 10000 }
});
Find the student information having roll_no = 2 or Sname = 'xyz'

javascript
Copy code
db.Students.find({
    $or: [{ roll_no: 2 }, { Sname: "xyz" }]
});
Update the experience of teacher Praveen to 10 years, or add if not exists

javascript
Copy code
db.Teachers.updateOne(
    { Tname: "Praveen" },
    { $set: { experience: 10 } },
    { upsert: true }
);
Update the department of all teachers in IT department to COMP

javascript
Copy code
db.Teachers.updateMany(
    { dname: "IT" },
    { $set: { dname: "COMP" } }
);
Find the teachers' names and their experience from the Teachers collection

javascript
Copy code
db.Teachers.find({}, { Tname: 1, experience: 1, _id: 0 });
Using save() method, insert one entry in Department collection

javascript
Copy code
db.Department.save({ dname: "Mechanical", dno: 104 });
Using save() method, change the department of teacher Rajesh to IT

javascript
db.Teachers.updateOne(
    { Tname: "Rajesh" },
    { $set: { dname: "IT" } }
);
Delete all documents from the Teachers collection with the IT department

javascript
Copy code
db.Teachers.deleteMany({ dname: "IT" });
Display with pretty() method, the first 3 documents in Teachers collection in ascending order

javascript
Copy code
db.Teachers.find().sort({ Tname: 1 }).limit(3).pretty();