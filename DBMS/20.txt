1.Create Database DYPIT
2. Create following Collections
Teachers(Tname,dno,dname,experience,salary,date_of_joining )
Students(Sname,roll_no,class)
3. Find the information about two teachers
4. Find the information about all teachers of computer department
5. Find the information about all teachers of computer,IT,and e&TC department
6. Find the information about all teachers of computer,IT,and E&TC department having salary
greate than or equl to 25000/-
7. Find the student information having roll_no = 25 or Sname=xyz
8. Update the experience of teacher-praveen to 10years, if the entry is not available in database
consider the entry as new entry.
9. Update the deparment of all the teachers working in IT deprtment to COMP
10. find the teachers name and their experience from teachers collection
11. Using Save() method insert one entry in department collection
13. Delete all the doccuments from teachers collection having IT dept.
14. display with pretty() method, the first 5 documents in teachers collection in ascending order










Step 1: Create Database and Collections
Switch to the DYPIT database and create the necessary collections.

javascript
Copy code
use DYPIT; // Switch to or create the DYPIT database

// Create Teachers collection with sample data
db.Teachers.insertMany([
    { Tname: "Praveen", dno: 101, dname: "COMP", experience: 5, salary: 30000, date_of_joining: new Date("2018-07-01") },
    { Tname: "Rajesh", dno: 102, dname: "IT", experience: 7, salary: 28000, date_of_joining: new Date("2017-03-10") },
    { Tname: "Anita", dno: 103, dname: "E&TC", experience: 6, salary: 26000, date_of_joining: new Date("2019-09-20") },
    { Tname: "Mohan", dno: 104, dname: "COMP", experience: 8, salary: 32000, date_of_joining: new Date("2015-04-15") },
    { Tname: "Kavita", dno: 105, dname: "IT", experience: 4, salary: 24000, date_of_joining: new Date("2020-01-12") }
]);

// Create Students collection with sample data
db.Students.insertMany([
    { Sname: "John", roll_no: 1, class: "10th" },
    { Sname: "xyz", roll_no: 25, class: "12th" }
]);
Queries
Find the information about two teachers

javascript
Copy code
db.Teachers.find().limit(2);
Find the information about all teachers of the computer department

javascript
Copy code
db.Teachers.find({ dname: "COMP" });
Find the information about all teachers of computer, IT, and E&TC departments

javascript
Copy code
db.Teachers.find({ dname: { $in: ["COMP", "IT", "E&TC"] } });
Find the information about all teachers of computer, IT, and E&TC departments with salary >= 25000

javascript
Copy code
db.Teachers.find({
    dname: { $in: ["COMP", "IT", "E&TC"] },
    salary: { $gte: 25000 }
});
Find the student information having roll_no = 25 or Sname = 'xyz'

javascript
Copy code
db.Students.find({
    $or: [{ roll_no: 25 }, { Sname: "xyz" }]
});
Update the experience of teacher Praveen to 10 years, or add if not exists

javascript
Copy code
db.Teachers.updateOne(
    { Tname: "Praveen" },
    { $set: { experience: 10 } },
    { upsert: true }
);
Update the department of all teachers in IT department to COMP

javascript
Copy code
db.Teachers.updateMany(
    { dname: "IT" },
    { $set: { dname: "COMP" } }
);
Find the teachers' names and their experience from the Teachers collection

javascript
Copy code
db.Teachers.find({}, { Tname: 1, experience: 1, _id: 0 });
Using save() method, insert one entry in Department collection

javascript
Copy code
db.Department.save({ dname: "Mechanical", dno: 106 });
Delete all documents from the Teachers collection with the IT department

javascript
Copy code
db.Teachers.deleteMany({ dname: "IT" });
Display with pretty() method, the first 5 documents in Teachers collection in ascending order

javascript
Copy code
db.Teachers.find().sort({ Tname: 1 }).limit(5).pretty();